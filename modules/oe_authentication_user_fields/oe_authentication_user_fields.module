<?php

/**
 * @file
 * OpenEuropa Authentication User Fields module.
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;

/**
 * Implements hook_entity_base_field_info().
 *
 * Adds custom EU Login fields.
 */
function oe_authentication_user_fields_entity_base_field_info(EntityTypeInterface $entity_type): array {
  if ($entity_type->id() !== 'user') {
    return [];
  }
  $custom_fields = [
    '7' => [
      'machine_name' => 'field_oe_firstname',
      'name' => t('First Name'),
      'description' => t("User's first name."),
    ],
    '8' => [
      'machine_name' => 'field_oe_lastname',
      'name' => t('Last Name'),
      'description' => t("User's last name."),
    ],
    '9' => [
      'machine_name' => 'field_oe_department',
      'name' => t('Department'),
      'description' => t("User's department."),
    ],
    '10' => [
      'machine_name' => 'field_oe_organisation',
      'name' => t('Organisation'),
      'description' => t("User's organisation."),
    ],
    '11' => [
      'machine_name' => 'field_oe_ldap_groups',
      'name' => t('LDAP groups'),
      'description' => t("The LDAP groups the user belongs to."),
      'multiple' => TRUE,
    ],
  ];

  $fields = [];
  foreach ($custom_fields as $weight => $field) {
    if ($field['machine_name'] === 'field_oe_ldap_groups' && !\Drupal::database()->schema()->tableExists('user__field_oe_ldap_groups') && \Drupal::database()->schema()->fieldExists('users_field_data', 'field_oe_organisation')) {
      // Looks hacky but there are some very narrow edge cases in which when
      // running the update hooks, the container builder instantiates some
      // services, which, in their construct methods load a user entity. And
      // when they do, exceptions are gonna be thrown because the table field
      // doesn't exist yet. The interesting thing is that not in all cases this
      // happens.
      // The condition above essentially checks if we are in a state in which
      // the site has the other fields and not yet the LDAP groups field. In
      // which case it means we are talking about an update path.
      continue;
    }

    $fields[$field['machine_name']] = BaseFieldDefinition::create('string')
      ->setLabel($field['name'])
      ->setDescription($field['description'])
      ->setSettings([
        'default_value' => '',
        'max_length' => 255,
      ])
      ->setDisplayOptions('form', [
        'weight' => $weight,
        'region' => 'content',
      ]);

    if (isset($field['multiple']) === TRUE) {
      $fields[$field['machine_name']]->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED);
    }
  }
  return $fields;
}
