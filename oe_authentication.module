<?php

/**
 * @file
 * OpenEuropa Authentication module.
 */

declare(strict_types=1);

/**
 * Implements hook_user_cancel_methods_alter().
 *
 * Conditionally removes the option to delete users.
 */
function oe_authentication_user_cancel_methods_alter(&$methods) {
  $current_user = \Drupal::currentUser();
  $restrict_user_delete = \Drupal::configFactory()
    ->get('oe_authentication.settings')
    ->get('restrict_user_delete_cancel_methods') ?? TRUE;
  // @todo The restriction should not check for UID 1 as it's bad practice. It
  //   should either check for the user being an admin, or use a permission
  //   based approach like the module drupal/user_cancel_methods_permissions.
  if ($current_user->id() == 1 || $restrict_user_delete !== TRUE) {
    return;
  }
  $restricted_options = [
    'user_cancel_reassign',
    'user_cancel_delete',
  ];
  foreach ($restricted_options as $restricted_option) {
    // @todo the 'access' property of the cancel methods should be used, rather
    //   than removing the method altogether.
    unset($methods[$restricted_option]);
  }
}

/**
 * Implements hook_menu_local_actions_alter().
 *
 * Change the title for the Add Cas users link added by the Cas module.
 */
function oe_authentication_menu_local_actions_alter(&$local_actions) {
  if (isset($local_actions['cas.bulk_add_cas_users'])) {
    $local_actions['cas.bulk_add_cas_users']['title'] = t('Add EU Login user');
  }
}

/**
 * Implements hook_form_form_id_alter().
 *
 * Replace CAS from strings in the "bulk add users" form.
 */
function oe_authentication_form_bulk_add_cas_users_alter(&$form, &$form_state, $form_id) {

  if (isset($form['intro']['#markup'])) {
    $form['intro']['#markup'] = t('Use this form to pre-register one or more users, allowing them to log in using EU Login.');
  }

  if (isset($form['cas_usernames']['#title'])) {
    $form['cas_usernames']['#title'] = t('EU Login username(s)');
  }

  if (isset($form['roles']['#description'])) {
    $form['roles']['#description'] = t('Optionally assign one or more roles to each user. Note that if you have EU Login configured to assign roles during automatic registration on login, those will be ignored.');
  }

  if (isset($form['extra_info']['#markup'])) {
    $form['extra_info']['#markup'] = t('Note that because EU Login attributes are only available when a user has logged in, any role or field assignment based on attributes will not be available using this form.');
  }
}
